#textdomain wesnoth-Troubled_Times

#define LEADER_ALIVE_CHECK SIDE
    [event]
        name=last breath
        first_time_only=no

        [filter]
            side={SIDE}
            canrecruit=yes
        [/filter]

        [store_unit]
            [filter]
                side={SIDE}
                canrecruit=no
            [/filter]
            variable=all_units
        [/store_unit]

        {VARIABLE index 0}
        {FOREACH all_units i}
            {IF_VAR all_units[$i].level greater_than $all_units[$index].level (
                [then]
                    {VARIABLE index $i}
                [/then]
                [else]
                    {IF_VAR all_units[$i].level less_than $all_units[$index].level (
                        [else]
                            {IF_VAR all_units[$i].experience greater_than $all_units[$index].experience (
                                [then]
                                    {VARIABLE index $i}
                                [/then]
                            )}
                        [/else]
                    )}
                [/else]
            )}
        {NEXT i}

        [store_starting_location]
            side={SIDE}
            variable=leader_pos
        [/store_starting_location]

        {IF_VAR all_units.length numerical_not_equals 0 (
            [then]
                {VARIABLE all_units[$index].canrecruit "yes"}
                {VARIABLE all_units[$index].overlays "misc/leader-crown.png"}
                {IF_VAR all_units[$index].x equals recall (
                    [then]
                        [unstore_unit]
                            variable=all_units[$index]
                            x,y=$leader_pos.x,$leader_pos.y
                        [/unstore_unit]
                    [/then]
                    [else]
                        [unstore_unit]
                            variable=all_units[$index]
                            find_vacant=no
                        [/unstore_unit]
                    [/else]
                )}
                [message]
                    speaker=narrator
                    caption= _ "New leader takes command"
                    message="$all_units[$index].name"+ _ " has been choosen as new leader."
                    image="$all_units[$index].profile"
                [/message]
            [/then]
            [else]
                [message]
                    speaker=narrator
                    caption= _ "End of Game"
                    message=_ "Our great warriors weren't so great this time. You lost!"
                    image="units/unknown-unit.png~RC(magenta>green)"
                [/message]
                [endlevel]
                    result=defeat
                    reveal_map=no
                [/endlevel]
            [/else]
        )}
        {CLEAR_VARIABLE all_units,index,leader_pos}
    [/event]
#enddef

#define SIDE_DATA SIDE NAME
    side={SIDE}
    controller=human
    team_name=good
    user_team_name= _ "Elves"
    id=P{SIDE}
    save_id=Player_{SIDE}
    name={NAME}
    type={NAME}
    canrecruit=yes
    persistent=yes
    team_lock=yes
    gold_lock=yes
    income_lock=yes
    color_lock=yes
    gold=25
    income=-2
    village_gold=1
    share_view=yes
    share_map=yes
#enddef

#define RING_SPEED X Y
    [item]
        x={X}
        y={Y}
        image="items/ring-silver.png"
        halo="halo/saurian-magic-halo-6.png"
    [/item]

    [event]
        name=moveto
        first_time_only=yes
        [filter]
            side=1,2,3
            x,y={X},{Y}
        [/filter]
        [remove_item]
            x,y={X},{Y}
        [/remove_item]
        [object]
            silent=yes
            duration=forever
            [filter]
                side=1
                canrecruit=yes
            [/filter]
            [effect]
                apply_to=movement
                increase=1
            [/effect]
        [/object]
        [object]
            silent=yes
            duration=forever
            [filter]
                side=2
                canrecruit=yes
            [/filter]
            [effect]
                apply_to=movement
                increase=1
            [/effect]
        [/object]
        [object]
            silent=yes
            duration=forever
            [filter]
                side=3
                canrecruit=yes
            [/filter]
            [effect]
                apply_to=movement
                increase=1
            [/effect]
        [/object]
        [message]
            speaker=unit
            message= _ "I feel that every elf leader is suddenly moving a bit faster."
        [/message]
    [/event]
#enddef

#define EXPERIENCE_BONUS TURNS S
    [event]
        name=victory

        [store_unit]
            [filter]
                canrecruit=yes
                [and]
                    side=1
                    [or]
                        side=2
                    [/or]
                    [or]
                        side=3
                    [/or]
                [/and]
            [/filter]
            variable=temp
        [/store_unit]

        {VARIABLE sides $temp.length}
        {CLEAR_VARIABLE temp}

        {VARIABLE turns_left "$({TURNS}-$turn_number)"}
        {VARIABLE bonus "$($turns_left*{S})"}

        {VARIABLE A 1}
        [while]
            [variable]
                name=A
                less_than_equal_to=$sides
            [/variable]
            [do]
                [store_unit]
                    [filter]
                        side=$A
                        x,y=1-999,1-999
                    [/filter]
                    variable=giveex
                [/store_unit]

                {FOREACH giveex i}
                    {VARIABLE_OP units add $giveex[$i].level}
                {NEXT i}

                {FOREACH giveex i}
                    {IF_VAR giveex[$i].canrecruit equals yes (
                        [then]
                            {VARIABLE experience $bonus}
                            {VARIABLE_OP experience divide $units}
                        [/then]
                        [else]
                            {VARIABLE experience $bonus}
                            {VARIABLE_OP experience divide $units}
                            {VARIABLE_OP experience sub $giveex[$i].level}
                        [/else]
                    )}

                    {IF_VAR experience greater_than {S} (
                        [then]
                            {VARIABLE_OP giveex[$i].experience add $experience}
                        [/then]
                        [else]
                            {VARIABLE_OP giveex[$i].experience add {S}}
                        [/else]
                    )}

                    [unstore_unit]
                        variable=giveex[$i]
                        find_vacant=no
                        fire_event=yes
                    [/unstore_unit]
                {NEXT i}

                {CLEAR_VARIABLE giveex,units,experience}
                {VARIABLE_OP A add 1}
            [/do]
        [/while]
        {CLEAR_VARIABLE A,sides,turns_left,bonus}
    [/event]
#enddef

#define RECALL_LOYALS
    [store_unit]
        [filter]
            canrecruit=no
            [and]
                [filter_wml]
                    upkeep="loyal"
                [/filter_wml]
            [/and]
            [not]
                [filter_wml]
                    level=0
                [/filter_wml]
            [/not]
        [/filter]
        variable=loyals
    [/store_unit]

    {FOREACH loyals l}
        [recall]
            id=$loyals[$l].id
            placement=leader
        [/recall]
    {NEXT l}
    {CLEAR_VARIABLE loyals}
#enddef

#define LEADERS_GOLD
    [event]
        name=die
        first_time_only=no

        [filter]
            canrecruit=yes
            is_enemy=yes
        [/filter]

        [gold]
            side=1
            amount=10
        [/gold]

        [gold]
            side=2
            amount=10
        [/gold]

        [gold]
            side=3
            amount=10
        [/gold]
    [/event]
#enddef

#define DELAY N
	[delay]
		time={N}
	[/delay]
#enddef
